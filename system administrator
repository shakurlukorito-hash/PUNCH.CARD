<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Settings | PunchCard</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://unpkg.com/feather-icons"></script>
    <style>
        .gradient-bg {
            background: linear-gradient(135deg, #3B82F6 0%, #10B981 100%);
        }
        .card-hover:hover {
            transform: translateY(-2px);
            transition: all 0.3s ease;
            box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1);
        }
        .wifi-strength {
            display: flex;
            gap: 2px;
        }
        .wifi-bar {
            width: 4px;
            background-color: #d1d5db;
            border-radius: 1px;
        }
        .wifi-bar.active {
            background-color: #10B981;
        }
        .settings-tab.active {
            background-color: #3B82F6;
            color: white;
        }
        .fade-in {
            animation: fadeIn 0.5s ease-in;
        }
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }
    </style>
</head>
<body class="bg-gray-50 min-h-screen">
    <!-- Header -->
    <div class="gradient-bg py-4 shadow-md">
        <div class="container mx-auto px-4">
            <div class="flex justify-between items-center">
                <div class="flex items-center space-x-2">
                    <i data-feather="clock" class="text-white w-6 h-6"></i>
                    <h1 class="text-white text-xl font-bold">PunchCard Admin</h1>
                </div>
                <a href="supervisor-dashboard.html" class="text-white hover:text-opacity-80 flex items-center">
                    <i data-feather="arrow-left" class="w-5 h-5 mr-1"></i> Back to Dashboard
                </a>
            </div>
        </div>
    </div>

    <!-- Main Content -->
    <div class="container mx-auto px-4 py-8">
        <div class="max-w-6xl mx-auto">
            <!-- Page Header -->
            <div class="mb-8 text-center">
                <h1 class="text-3xl font-bold text-gray-800">System Administration</h1>
                <p class="text-gray-600 mt-2">Manage WiFi settings, supervisor permissions, and system configurations</p>
            </div>

            <!-- Settings Navigation -->
            <div class="bg-white rounded-xl shadow-sm p-2 mb-8">
                <div class="flex flex-wrap gap-2">
                    <button class="settings-tab active px-4 py-3 rounded-lg font-medium transition-colors flex items-center" data-tab="wifi">
                        <i data-feather="wifi" class="w-4 h-4 mr-2"></i>
                        WiFi Management
                    </button>
                    <button class="settings-tab px-4 py-3 rounded-lg font-medium text-gray-600 hover:text-gray-800 transition-colors flex items-center" data-tab="supervisor">
                        <i data-feather="user-check" class="w-4 h-4 mr-2"></i>
                        Supervisor Nomination
                    </button>
                    <button class="settings-tab px-4 py-3 rounded-lg font-medium text-gray-600 hover:text-gray-800 transition-colors flex items-center" data-tab="permissions">
                        <i data-feather="shield" class="w-4 h-4 mr-2"></i>
                        User Permissions
                    </button>
                    <button class="settings-tab px-4 py-3 rounded-lg font-medium text-gray-600 hover:text-gray-800 transition-colors flex items-center" data-tab="system">
                        <i data-feather="settings" class="w-4 h-4 mr-2"></i>
                        System Settings
                    </button>
                </div>
            </div>

            <!-- WiFi Management Section -->
            <div id="wifiSettings" class="settings-content active fade-in">
                <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
                    <!-- WiFi Status Card -->
                    <div class="lg:col-span-2">
                        <div class="bg-white rounded-xl shadow-sm p-6 card-hover">
                            <div class="flex justify-between items-center mb-6">
                                <h2 class="text-xl font-bold text-gray-800 flex items-center">
                                    <i data-feather="wifi" class="w-5 h-5 mr-2 text-blue-500"></i>
                                    WiFi Network Management
                                </h2>
                                <button id="scanWifiNetworks" class="px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 font-medium text-sm flex items-center">
                                    <i data-feather="refresh-cw" class="w-4 h-4 mr-2"></i>
                                    Scan Networks
                                </button>
                            </div>
                            
                            <!-- Current WiFi Status -->
                            <div class="bg-blue-50 border border-blue-200 rounded-lg p-4 mb-6">
                                <div class="flex items-center justify-between">
                                    <div class="flex items-center">
                                        <i data-feather="wifi" class="w-5 h-5 text-blue-500 mr-3"></i>
                                        <div>
                                            <p class="text-sm font-medium text-blue-800" id="currentWifiStatus">Scanning for networks...</p>
                                            <p class="text-xs text-blue-600" id="currentWifiDetails">No network connected</p>
                                        </div>
                                    </div>
                                    <div class="wifi-strength" id="wifiStrengthIndicator">
                                        <div class="wifi-bar h-1"></div>
                                        <div class="wifi-bar h-2"></div>
                                        <div class="wifi-bar h-3"></div>
                                        <div class="wifi-bar h-2"></div>
                                    </div>
                                </div>
                            </div>

                            <!-- Available Networks -->
                            <div class="mb-6">
                                <h3 class="font-medium text-gray-800 mb-3 flex items-center">
                                    <i data-feather="list" class="w-4 h-4 mr-2 text-blue-500"></i>
                                    Available Networks
                                </h3>
                                
                                <div class="space-y-3" id="availableNetworksList">
                                    <!-- Networks will be populated here -->
                                </div>
                            </div>

                            <!-- Auto-Login Networks -->
                            <div>
                                <h3 class="font-medium text-gray-800 mb-3 flex items-center">
                                    <i data-feather="log-in" class="w-4 h-4 mr-2 text-green-500"></i>
                                    Auto-Login Networks
                                </h3>
                                <p class="text-sm text-gray-600 mb-4">
                                    Staff will be automatically logged in when connected to these approved networks.
                                </p>
                                
                                <div class="space-y-3" id="autoLoginNetworks">
                                    <!-- Auto-login networks will be populated here -->
                                </div>
                                
                                <button id="addAutoLoginNetwork" class="mt-4 px-4 py-2 text-blue-600 border border-blue-300 rounded-lg hover:bg-blue-50 text-sm font-medium flex items-center">
                                    <i data-feather="plus" class="w-4 h-4 mr-1"></i>
                                    Add Network
                                </button>
                            </div>
                        </div>
                    </div>

                    <!-- WiFi Settings Sidebar -->
                    <div class="space-y-6">
                        <!-- Security Settings -->
                        <div class="bg-white rounded-xl shadow-sm p-6 card-hover">
                            <h3 class="font-medium text-gray-800 mb-4 flex items-center">
                                <i data-feather="shield" class="w-4 h-4 mr-2 text-purple-500"></i>
                                Security Settings
                            </h3>
                            
                            <div class="space-y-4">
                                <div class="flex items-center">
                                    <input type="checkbox" id="wifiAutoLogin" class="w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500">
                                    <label for="wifiAutoLogin" class="ml-2 text-sm font-medium text-gray-700">
                                        Enable WiFi Auto-Login
                                    </label>
                                </div>
                                
                                <div class="flex items-center">
                                    <input type="checkbox" id="requireSecureNetworks" class="w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500" checked>
                                    <label for="requireSecureNetworks" class="ml-2 text-sm font-medium text-gray-700">
                                        Only allow secure networks (WPA2/WPA3)
                                    </label>
                                </div>
                                
                                <div class="flex items-center">
                                    <input type="checkbox" id="notifyNewNetworks" class="w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500" checked>
                                    <label for="notifyNewNetworks" class="ml-2 text-sm font-medium text-gray-700">
                                        Notify when new networks are detected
                                    </label>
                                </div>
                            </div>
                        </div>

                        <!-- Network Statistics -->
                        <div class="bg-white rounded-xl shadow-sm p-6 card-hover">
                            <h3 class="font-medium text-gray-800 mb-4 flex items-center">
                                <i data-feather="bar-chart-2" class="w-4 h-4 mr-2 text-orange-500"></i>
                                Network Statistics
                            </h3>
                            
                            <div class="grid grid-cols-2 gap-4 text-center">
                                <div>
                                    <p class="text-2xl font-bold text-blue-600" id="totalNetworks">0</p>
                                    <p class="text-xs text-gray-600">Total Networks</p>
                                </div>
                                <div>
                                    <p class="text-2xl font-bold text-green-600" id="approvedNetworks">0</p>
                                    <p class="text-xs text-gray-600">Approved</p>
                                </div>
                                <div>
                                    <p class="text-2xl font-bold text-yellow-600" id="securedNetworks">0</p>
                                    <p class="text-xs text-gray-600">Secured</p>
                                </div>
                                <div>
                                    <p class="text-2xl font-bold text-red-600" id="blockedNetworks">0</p>
                                    <p class="text-xs text-gray-600">Blocked</p>
                                </div>
                            </div>
                        </div>

                        <!-- Quick Actions -->
                        <div class="bg-white rounded-xl shadow-sm p-6 card-hover">
                            <h3 class="font-medium text-gray-800 mb-4 flex items-center">
                                <i data-feather="zap" class="w-4 h-4 mr-2 text-yellow-500"></i>
                                Quick Actions
                            </h3>
                            
                            <div class="space-y-3">
                                <button id="testAllNetworks" class="w-full px-4 py-2 bg-yellow-500 text-white rounded-lg hover:bg-yellow-600 font-medium text-sm flex items-center justify-center">
                                    <i data-feather="wifi" class="w-4 h-4 mr-2"></i>
                                    Test All Networks
                                </button>
                                <button id="exportWifiConfig" class="w-full px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 font-medium text-sm flex items-center justify-center">
                                    <i data-feather="download" class="w-4 h-4 mr-2"></i>
                                    Export Configuration
                                </button>
                                <button id="resetWifiSettings" class="w-full px-4 py-2 bg-red-500 text-white rounded-lg hover:bg-red-600 font-medium text-sm flex items-center justify-center">
                                    <i data-feather="trash-2" class="w-4 h-4 mr-2"></i>
                                    Reset to Defaults
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Supervisor Nomination Section -->
            <div id="supervisorSettings" class="settings-content hidden fade-in">
                <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
                    <div class="lg:col-span-2">
                        <div class="bg-white rounded-xl shadow-sm p-6 card-hover">
                            <h2 class="text-xl font-bold text-gray-800 mb-6 flex items-center">
                                <i data-feather="user-check" class="w-5 h-5 mr-2 text-green-500"></i>
                                Supervisor Nomination & Management
                            </h2>
                            
                            <!-- Current Supervisor -->
                            <div class="bg-green-50 border border-green-200 rounded-lg p-4 mb-6">
                                <div class="flex items-center justify-between">
                                    <div class="flex items-center">
                                        <i data-feather="user" class="w-5 h-5 text-green-500 mr-3"></i>
                                        <div>
                                            <p class="text-sm font-medium text-green-800">Current Primary Supervisor</p>
                                            <p class="text-xs text-green-600" id="currentSupervisor">John Doe (john.doe@company.com)</p>
                                        </div>
                                    </div>
                                    <span class="bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full">Active</span>
                                </div>
                            </div>

                            <!-- Nominate New Supervisor -->
                            <div class="mb-6">
                                <h3 class="font-medium text-gray-800 mb-4">Nominate Acting Supervisor</h3>
                                
                                <div class="space-y-4">
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700 mb-2">Select Staff Member</label>
                                        <select id="actingSupervisor" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-green-500">
                                            <option value="">Select staff member...</option>
                                            <option value="jane-smith">Jane Smith (Marketing)</option>
                                            <option value="mike-wilson">Mike Wilson (Development)</option>
                                            <option value="sarah-johnson">Sarah Johnson (Support)</option>
                                            <option value="david-brown">David Brown (Sales)</option>
                                        </select>
                                    </div>
                                    
                                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                                        <div>
                                            <label class="block text-sm font-medium text-gray-700 mb-2">Start Date & Time</label>
                                            <input type="datetime-local" id="supervisorStartDate" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-green-500">
                                        </div>
                                        <div>
                                            <label class="block text-sm font-medium text-gray-700 mb-2">End Date & Time</label>
                                            <input type="datetime-local" id="supervisorEndDate" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-green-500">
                                        </div>
                                    </div>
                                    
                                    <div class="flex items-center">
                                        <input type="checkbox" id="notifyStaff" class="w-4 h-4 text-green-600 border-gray-300 rounded focus:ring-green-500" checked>
                                        <label for="notifyStaff" class="ml-2 text-sm font-medium text-gray-700">
                                            Notify staff about temporary supervisor assignment
                                        </label>
                                    </div>

                                    <button id="assignSupervisor" class="w-full px-4 py-2 bg-green-500 text-white rounded-lg hover:bg-green-600 font-medium flex items-center justify-center">
                                        <i data-feather="user-check" class="w-4 h-4 mr-2"></i>
                                        Assign Acting Supervisor
                                    </button>
                                </div>
                            </div>

                            <!-- Current Acting Supervisors -->
                            <div>
                                <h3 class="font-medium text-gray-800 mb-4">Current Acting Supervisors</h3>
                                
                                <div class="space-y-3" id="actingSupervisorsList">
                                    <!-- Acting supervisors will be populated here -->
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Supervisor Management Sidebar -->
                    <div class="space-y-6">
                        <!-- Supervisor Permissions -->
                        <div class="bg-white rounded-xl shadow-sm p-6 card-hover">
                            <h3 class="font-medium text-gray-800 mb-4 flex items-center">
                                <i data-feather="key" class="w-4 h-4 mr-2 text-purple-500"></i>
                                Supervisor Permissions
                            </h3>
                            
                            <div class="space-y-3">
                                <div class="flex items-center">
                                    <input type="checkbox" id="permAttendance" class="w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500" checked>
                                    <label for="permAttendance" class="ml-2 text-sm font-medium text-gray-700">
                                        View team attendance
                                    </label>
                                </div>
                                
                                <div class="flex items-center">
                                    <input type="checkbox" id="permScheduling" class="w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500" checked>
                                    <label for="permScheduling" class="ml-2 text-sm font-medium text-gray-700">
                                        Manage schedules
                                    </label>
                                </div>
                                
                                <div class="flex items-center">
                                    <input type="checkbox" id="permApprovals" class="w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500" checked>
                                    <label for="permApprovals" class="ml-2 text-sm font-medium text-gray-700">
                                        Approve requests
                                    </label>
                                </div>
                                
                                <div class="flex items-center">
                                    <input type="checkbox" id="permReports" class="w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500">
                                    <label for="permReports" class="ml-2 text-sm font-medium text-gray-700">
                                        Generate reports
                                    </label>
                                </div>
                                
                                <div class="flex items-center">
                                    <input type="checkbox" id="permSettings" class="w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500">
                                    <label for="permSettings" class="ml-2 text-sm font-medium text-gray-700">
                                        Access admin settings
                                    </label>
                                </div>
                            </div>
                        </div>

                        <!-- Supervisor History -->
                        <div class="bg-white rounded-xl shadow-sm p-6 card-hover">
                            <h3 class="font-medium text-gray-800 mb-4 flex items-center">
                                <i data-feather="clock" class="w-4 h-4 mr-2 text-orange-500"></i>
                                Recent Assignments
                            </h3>
                            
                            <div class="space-y-3" id="supervisorHistory">
                                <!-- History will be populated here -->
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- User Permissions Section -->
            <div id="permissionsSettings" class="settings-content hidden fade-in">
                <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
                    <div class="lg:col-span-2">
                        <div class="bg-white rounded-xl shadow-sm p-6 card-hover">
                            <h2 class="text-xl font-bold text-gray-800 mb-6 flex items-center">
                                <i data-feather="shield" class="w-5 h-5 mr-2 text-purple-500"></i>
                                User Permissions & Access Control
                            </h2>
                            
                            <!-- Role Management -->
                            <div class="mb-6">
                                <h3 class="font-medium text-gray-800 mb-4">Role Management</h3>
                                
                                <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mb-4">
                                    <div class="border border-gray-200 rounded-lg p-4 hover:border-purple-500 cursor-pointer role-card" data-role="employee">
                                        <div class="flex items-center space-x-3">
                                            <div class="bg-blue-100 p-2 rounded-lg">
                                                <i data-feather="user" class="text-blue-600"></i>
                                            </div>
                                            <div>
                                                <h4 class="font-medium text-gray-800">Employee</h4>
                                                <p class="text-xs text-gray-600">Basic access</p>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="border border-gray-200 rounded-lg p-4 hover:border-purple-500 cursor-pointer role-card" data-role="supervisor">
                                        <div class="flex items-center space-x-3">
                                            <div class="bg-green-100 p-2 rounded-lg">
                                                <i data-feather="user-check" class="text-green-600"></i>
                                            </div>
                                            <div>
                                                <h4 class="font-medium text-gray-800">Supervisor</h4>
                                                <p class="text-xs text-gray-600">Team management</p>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="border border-gray-200 rounded-lg p-4 hover:border-purple-500 cursor-pointer role-card active" data-role="admin">
                                        <div class="flex items-center space-x-3">
                                            <div class="bg-purple-100 p-2 rounded-lg">
                                                <i data-feather="settings" class="text-purple-600"></i>
                                            </div>
                                            <div>
                                                <h4 class="font-medium text-gray-800">Administrator</h4>
                                                <p class="text-xs text-gray-600">Full system access</p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- User List -->
                            <div>
                                <h3 class="font-medium text-gray-800 mb-4">User Access Control</h3>
                                
                                <div class="overflow-x-auto">
                                    <table class="min-w-full divide-y divide-gray-200">
                                        <thead class="bg-gray-50">
                                            <tr>
                                                <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">User</th>
                                                <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Role</th>
                                                <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Department</th>
                                                <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                                                <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                                            </tr>
                                        </thead>
                                        <tbody class="bg-white divide-y divide-gray-200" id="usersTable">
                                            <!-- Users will be populated here -->
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Permissions Sidebar -->
                    <div class="space-y-6">
                        <!-- Permission Settings -->
                        <div class="bg-white rounded-xl shadow-sm p-6 card-hover">
                            <h3 class="font-medium text-gray-800 mb-4 flex items-center">
                                <i data-feather="lock" class="w-4 h-4 mr-2 text-red-500"></i>
                                Permission Settings
                            </h3>
                            
                            <div class="space-y-4">
                                <div>
                                    <label class="block text-sm font-medium text-gray-700 mb-2">Default Role for New Users</label>
                                    <select id="defaultRole" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-purple-500">
                                        <option value="employee">Employee</option>
                                        <option value="supervisor">Supervisor</option>
                                        <option value="admin">Administrator</option>
                                    </select>
                                </div>
                                
                                <div class="flex items-center">
                                    <input type="checkbox" id="requireApproval" class="w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500" checked>
                                    <label for="requireApproval" class="ml-2 text-sm font-medium text-gray-700">
                                        Require approval for role changes
                                    </label>
                                </div>
                                
                                <div class="flex items-center">
                                    <input type="checkbox" id="auditLog" class="w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500" checked>
                                    <label for="auditLog" class="ml-2 text-sm font-medium text-gray-700">
                                        Enable permission audit log
                                    </label>
                                </div>
                            </div>
                        </div>

                        <!-- Quick User Actions -->
                        <div class="bg-white rounded-xl shadow-sm p-6 card-hover">
                            <h3 class="font-medium text-gray-800 mb-4 flex items-center">
                                <i data-feather="users" class="w-4 h-4 mr-2 text-blue-500"></i>
                                Quick Actions
                            </h3>
                            
                            <div class="space-y-3">
                                <button id="addNewUser" class="w-full px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 font-medium text-sm flex items-center justify-center">
                                    <i data-feather="user-plus" class="w-4 h-4 mr-2"></i>
                                    Add New User
                                </button>
                                <button id="bulkEditRoles" class="w-full px-4 py-2 bg-purple-500 text-white rounded-lg hover:bg-purple-600 font-medium text-sm flex items-center justify-center">
                                    <i data-feather="edit" class="w-4 h-4 mr-2"></i>
                                    Bulk Edit Roles
                                </button>
                                <button id="exportPermissions" class="w-full px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 font-medium text-sm flex items-center justify-center">
                                    <i data-feather="download" class="w-4 h-4 mr-2"></i>
                                    Export Permissions
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- System Settings Section -->
            <div id="systemSettings" class="settings-content hidden fade-in">
                <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
                    <div class="lg:col-span-2">
                        <div class="bg-white rounded-xl shadow-sm p-6 card-hover">
                            <h2 class="text-xl font-bold text-gray-800 mb-6 flex items-center">
                                <i data-feather="settings" class="w-5 h-5 mr-2 text-gray-500"></i>
                                System Configuration
                            </h2>
                            
                            <!-- General Settings -->
                            <div class="mb-6">
                                <h3 class="font-medium text-gray-800 mb-4">General Settings</h3>
                                
                                <div class="space-y-4">
                                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                                        <div>
                                            <label class="block text-sm font-medium text-gray-700 mb-2">Working Hours Start</label>
                                            <input type="time" id="workStartTime" value="09:00" class="w-full px-3 py-2 border border-gray-300 rounded-lg">
                                        </div>
                                        <div>
                                            <label class="block text-sm font-medium text-gray-700 mb-2">Working Hours End</label>
                                            <input type="time" id="workEndTime" value="17:00" class="w-full px-3 py-2 border border-gray-300 rounded-lg">
                                        </div>
                                    </div>

                                    <div>
                                        <label class="block text-sm font-medium text-gray-700 mb-2">Late Arrival Threshold (minutes)</label>
                                        <input type="number" id="lateThreshold" value="15" min="1" max="60" class="w-full px-3 py-2 border border-gray-300 rounded-lg">
                                    </div>

                                    <div class="flex items-center">
                                        <input type="checkbox" id="autoClockOut" class="w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500" checked>
                                        <label for="autoClockOut" class="ml-2 text-sm font-medium text-gray-700">
                                            Auto clock-out at end of working day
                                        </label>
                                    </div>
                                </div>
                            </div>

                            <!-- Notification Settings -->
                            <div class="mb-6">
                                <h3 class="font-medium text-gray-800 mb-4">Notification Settings</h3>
                                
                                <div class="space-y-3">
                                    <div class="flex items-center">
                                        <input type="checkbox" id="emailNotifications" class="w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500" checked>
                                        <label for="emailNotifications" class="ml-2 text-sm font-medium text-gray-700">
                                            Email notifications for late arrivals
                                        </label>
                                    </div>

                                    <div class="flex items-center">
                                        <input type="checkbox" id="smsNotifications" class="w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500">
                                        <label for="smsNotifications" class="ml-2 text-sm font-medium text-gray-700">
                                            SMS notifications for critical alerts
                                        </label>
                                    </div>

                                    <div class="flex items-center">
                                        <input type="checkbox" id="pushNotifications" class="w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500" checked>
                                        <label for="pushNotifications" class="ml-2 text-sm font-medium text-gray-700">
                                            Push notifications for approvals
                                        </label>
                                    </div>
                                </div>
                            </div>

                            <!-- Data & Privacy -->
                            <div>
                                <h3 class="font-medium text-gray-800 mb-4">Data & Privacy</h3>
                                
                                <div class="space-y-4">
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700 mb-2">Data Retention Period (months)</label>
                                        <input type="number" id="dataRetention" value="24" min="6" max="60" class="w-full px-3 py-2 border border-gray-300 rounded-lg">
                                    </div>

                                    <div class="flex items-center">
                                        <input type="checkbox" id="anonymizeData" class="w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500">
                                        <label for="anonymizeData" class="ml-2 text-sm font-medium text-gray-700">
                                            Anonymize data after retention period
                                        </label>
                                    </div>

                                    <div class="flex items-center">
                                        <input type="checkbox" id="exportData" class="w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500" checked>
                                        <label for="exportData" class="ml-2 text-sm font-medium text-gray-700">
                                            Allow data export for users
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- System Actions Sidebar -->
                    <div class="space-y-6">
                        <!-- System Status -->
                        <div class="bg-white rounded-xl shadow-sm p-6 card-hover">
                            <h3 class="font-medium text-gray-800 mb-4 flex items-center">
                                <i data-feather="activity" class="w-4 h-4 mr-2 text-green-500"></i>
                                System Status
                            </h3>
                            
                            <div class="space-y-3">
                                <div class="flex justify-between items-center">
                                    <span class="text-sm text-gray-600">Database</span>
                                    <span class="bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full">Online</span>
                                </div>
                                <div class="flex justify-between items-center">
                                    <span class="text-sm text-gray-600">Authentication</span>
                                    <span class="bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full">Online</span>
                                </div>
                                <div class="flex justify-between items-center">
                                    <span class="text-sm text-gray-600">Email Service</span>
                                    <span class="bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full">Online</span>
                                </div>
                                <div class="flex justify-between items-center">
                                    <span class="text-sm text-gray-600">Storage</span>
                                    <span class="bg-yellow-100 text-yellow-800 text-xs px-2 py-1 rounded-full">85% Used</span>
                                </div>
                            </div>
                        </div>

                        <!-- System Actions -->
                        <div class="bg-white rounded-xl shadow-sm p-6 card-hover">
                            <h3 class="font-medium text-gray-800 mb-4 flex items-center">
                                <i data-feather="tool" class="w-4 h-4 mr-2 text-orange-500"></i>
                                System Actions
                            </h3>
                            
                            <div class="space-y-3">
                                <button id="backupSystem" class="w-full px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 font-medium text-sm flex items-center justify-center">
                                    <i data-feather="save" class="w-4 h-4 mr-2"></i>
                                    Backup System
                                </button>
                                <button id="clearCache" class="w-full px-4 py-2 bg-yellow-500 text-white rounded-lg hover:bg-yellow-600 font-medium text-sm flex items-center justify-center">
                                    <i data-feather="refresh-cw" class="w-4 h-4 mr-2"></i>
                                    Clear Cache
                                </button>
                                <button id="systemRestart" class="w-full px-4 py-2 bg-red-500 text-white rounded-lg hover:bg-red-600 font-medium text-sm flex items-center justify-center">
                                    <i data-feather="power" class="w-4 h-4 mr-2"></i>
                                    Restart System
                                </button>
                            </div>
                        </div>

                        <!-- System Information -->
                        <div class="bg-white rounded-xl shadow-sm p-6 card-hover">
                            <h3 class="font-medium text-gray-800 mb-4 flex items-center">
                                <i data-feather="info" class="w-4 h-4 mr-2 text-blue-500"></i>
                                System Information
                            </h3>
                            
                            <div class="space-y-2 text-sm">
                                <div class="flex justify-between">
                                    <span class="text-gray-600">Version</span>
                                    <span class="font-medium">2.4.1</span>
                                </div>
                                <div class="flex justify-between">
                                    <span class="text-gray-600">Last Updated</span>
                                    <span class="font-medium">2024-01-15</span>
                                </div>
                                <div class="flex justify-between">
                                    <span class="text-gray-600">Users</span>
                                    <span class="font-medium">247</span>
                                </div>
                                <div class="flex justify-between">
                                    <span class="text-gray-600">Storage Used</span>
                                    <span class="font-medium">4.2 GB / 10 GB</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Network Configuration Modal -->
    <div id="networkConfigModal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 hidden">
        <div class="bg-white rounded-xl shadow-lg p-6 w-full max-w-md">
            <div class="flex justify-between items-center mb-4">
                <h3 class="text-lg font-bold text-gray-800" id="networkConfigTitle">Configure Network</h3>
                <button id="closeNetworkConfig" class="text-gray-500 hover:text-gray-700">
                    <i data-feather="x" class="w-5 h-5"></i>
                </button>
            </div>
            
            <form id="networkConfigForm" class="space-y-4">
                <input type="hidden" id="configNetworkId">
                
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">Network Name (SSID)</label>
                    <input type="text" id="configSsid" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500" required>
                </div>
                
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">Security Type</label>
                    <select id="configSecurity" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                        <option value="none">None (Open)</option>
                        <option value="wpa2">WPA2-Personal</option>
                        <option value="wpa3">WPA3</option>
                        <option value="wpa2-enterprise">WPA2-Enterprise</option>
                    </select>
                </div>
                
                <div id="passwordField" class="hidden">
                    <label class="block text-sm font-medium text-gray-700 mb-1">Password</label>
                    <input type="password" id="configPassword" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                </div>
                
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">Auto-Login Permission</label>
                    <select id="configAutoLogin" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                        <option value="allow">Allow Auto-Login</option>
                        <option value="block">Block Auto-Login</option>
                        <option value="require-auth">Require Manual Authentication</option>
                    </select>
                </div>
                
                <div class="flex items-center">
                    <input type="checkbox" id="configIsHidden" class="w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500">
                    <label for="configIsHidden" class="ml-2 text-sm font-medium text-gray-700">
                        Hidden Network
                    </label>
                </div>
                
                <div class="flex justify-end space-x-3 pt-4">
                    <button type="button" id="cancelNetworkConfig" class="px-4 py-2 text-gray-600 hover:text-gray-800 font-medium">
                        Cancel
                    </button>
                    <button type="submit" class="px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 font-medium">
                        Save Network
                    </button>
                </div>
            </form>
        </div>
    </div>

    <script>
        // Sample data
        const sampleNetworks = [
            { id: 1, ssid: 'Office_WiFi_5G', security: 'wpa2', strength: 4, autoLogin: true, connected: true },
            { id: 2, ssid: 'Guest_WiFi', security: 'wpa2', strength: 3, autoLogin: false, connected: false },
            { id: 3, ssid: 'Conference_Room', security: 'wpa3', strength: 2, autoLogin: true, connected: false },
            { id: 4, ssid: 'Reception_WiFi', security: 'none', strength: 3, autoLogin: false, connected: false },
            { id: 5, ssid: 'Management_Network', security: 'wpa2-enterprise', strength: 4, autoLogin: true, connected: false }
        ];

        const sampleUsers = [
            { id: 1, name: 'John Doe', email: 'john.doe@company.com', role: 'admin', department: 'IT', status: 'active' },
            { id: 2, name: 'Jane Smith', email: 'jane.smith@company.com', role: 'supervisor', department: 'Marketing', status: 'active' },
            { id: 3, name: 'Mike Wilson', email: 'mike.wilson@company.com', role: 'employee', department: 'Development', status: 'active' },
            { id: 4, name: 'Sarah Johnson', email: 'sarah.johnson@company.com', role: 'employee', department: 'Support', status: 'inactive' },
            { id: 5, name: 'David Brown', email: 'david.brown@company.com', role: 'supervisor', department: 'Sales', status: 'active' }
        ];

        const sampleActingSupervisors = [
            { id: 1, name: 'Jane Smith', startDate: '2024-01-20T09:00', endDate: '2024-01-25T17:00', status: 'active' },
            { id: 2, name: 'David Brown', startDate: '2024-01-15T09:00', endDate: '2024-01-18T17:00', status: 'expired' }
        ];

        // Initialize the application
        document.addEventListener('DOMContentLoaded', function() {
            initializeSettingsTabs();
            initializeWifiManagement();
            initializeSupervisorManagement();
            initializePermissionsManagement();
            initializeSystemSettings();
            feather.replace();
        });

        // Settings Tab Navigation
        function initializeSettingsTabs() {
            const tabs = document.querySelectorAll('.settings-tab');
            const contents = document.querySelectorAll('.settings-content');

            tabs.forEach(tab => {
                tab.addEventListener('click', function() {
                    const targetTab = this.getAttribute('data-tab');
                    
                    // Update active tab
                    tabs.forEach(t => {
                        t.classList.remove('active', 'bg-blue-500', 'text-white');
                        t.classList.add('text-gray-600');
                    });
                    this.classList.add('active', 'bg-blue-500', 'text-white');
                    this.classList.remove('text-gray-600');
                    
                    // Show target content
                    contents.forEach(content => {
                        content.classList.add('hidden');
                        content.classList.remove('active');
                    });
                    document.getElementById(`${targetTab}Settings`).classList.remove('hidden');
                    document.getElementById(`${targetTab}Settings`).classList.add('active');
                });
            });
        }

        // WiFi Management
        function initializeWifiManagement() {
            const scanWifiBtn = document.getElementById('scanWifiNetworks');
            const addAutoLoginBtn = document.getElementById('addAutoLoginNetwork');
            const securitySelect = document.getElementById('configSecurity');
            const networkConfigForm = document.getElementById('networkConfigForm');
            const closeNetworkConfigBtn = document.getElementById('closeNetworkConfig');
            const cancelNetworkConfigBtn = document.getElementById('cancelNetworkConfig');

            // Event listeners
            scanWifiBtn.addEventListener('click', scanWifiNetworks);
            addAutoLoginBtn.addEventListener('click', addAutoLoginNetwork);
            securitySelect.addEventListener('change', togglePasswordField);
            networkConfigForm.addEventListener('submit', saveNetworkConfig);
            closeNetworkConfigBtn.addEventListener('click', closeNetworkConfig);
            cancelNetworkConfigBtn.addEventListener('click', closeNetworkConfig);

            // Quick actions
            document.getElementById('testAllNetworks').addEventListener('click', testAllNetworks);
            document.getElementById('exportWifiConfig').addEventListener('click', exportWifiConfig);
            document.getElementById('resetWifiSettings').addEventListener('click', resetWifiSettings);

            // Initial load
            loadWifiNetworks();
            updateWifiStatus();
        }

        function loadWifiNetworks() {
            const wifiSettings = JSON.parse(localStorage.getItem('wifiSettings') || '{}');
            const networks = wifiSettings.networks || sampleNetworks;
            
            updateAvailableNetworks(networks);
            updateAutoLoginNetworks(networks);
            updateNetworkStatistics(networks);
        }

        function scanWifiNetworks() {
            showMessage('Scanning for WiFi networks...', 'success');
            
            setTimeout(() => {
                const wifiSettings = JSON.parse(localStorage.getItem('wifiSettings') || '{}');
                const networks = wifiSettings.networks || sampleNetworks;
                
                // Add some random networks to simulate discovery
                const newNetworks = [...networks];
                const randomNetworks = [
                    { id: Date.now(), ssid: 'New_Network_' + Math.floor(Math.random() * 100), security: 'wpa2', strength: Math.floor(Math.random() * 4) + 1, autoLogin: false, connected: false },
                    { id: Date.now() + 1, ssid: 'Temp_WiFi_' + Math.floor(Math.random() * 100), security: 'none', strength: Math.floor(Math.random() * 4) + 1, autoLogin: false, connected: false }
                ];
                
                newNetworks.push(...randomNetworks);
                updateAvailableNetworks(newNetworks);
                updateNetworkStatistics(newNetworks);
                
                showMessage('WiFi scan completed! Found ' + randomNetworks.length + ' new networks.', 'success');
            }, 2000);
        }

        function updateAvailableNetworks(networks) {
            const networksList = document.getElementById('availableNetworksList');
            networksList.innerHTML = '';

            networks.forEach(network => {
                const networkElement = document.createElement('div');
                networkElement.className = 'flex items-center justify-between p-3 border border-gray-200 rounded-lg hover:bg-gray-50';
                
                const securityIcon = getSecurityIcon(network.security);
                const strengthBars = getStrengthBars(network.strength);
                const connectedBadge = network.connected ? 
                    '<span class="bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full">Connected</span>' : '';
                
                networkElement.innerHTML = `
                    <div class="flex items-center space-x-3">
                        <div class="text-gray-400">
                            ${securityIcon}
                        </div>
                        <div>
                            <p class="font-medium text-gray-800">${network.ssid}</p>
                            <p class="text-xs text-gray-500 capitalize">${network.security.replace('-', ' ')}</p>
                        </div>
                    </div>
                    <div class="flex items-center space-x-3">
                        <div class="wifi-strength">
                            ${strengthBars}
                        </div>
                        ${connectedBadge}
                        <button class="text-blue-600 hover:text-blue-800 configure-network" data-id="${network.id}">
                            <i data-feather="settings" class="w-4 h-4"></i>
                        </button>
                    </div>
                `;
                
                networksList.appendChild(networkElement);
            });

            feather.replace();
            
            // Add event listeners for configure buttons
            document.querySelectorAll('.configure-network').forEach(btn => {
                btn.addEventListener('click', function() {
                    const networkId = this.getAttribute('data-id');
                    configureNetwork(networkId, networks);
                });
            });
        }

        function updateAutoLoginNetworks(networks) {
            const autoLoginContainer = document.getElementById('autoLoginNetworks');
            autoLoginContainer.innerHTML = '';

            const autoLoginNetworks = networks.filter(network => network.autoLogin);
            
            if (autoLoginNetworks.length === 0) {
                autoLoginContainer.innerHTML = '<p class="text-gray-500 text-center py-4">No auto-login networks configured</p>';
                return;
            }

            autoLoginNetworks.forEach(network => {
                const networkElement = document.createElement('div');
                networkElement.className = 'flex items-center justify-between p-3 bg-green-50 border border-green-200 rounded-lg';
                
                networkElement.innerHTML = `
                    <div class="flex items-center space-x-3">
                        <i data-feather="check-circle" class="w-4 h-4 text-green-500"></i>
                        <div>
                            <p class="font-medium text-gray-800">${network.ssid}</p>
                            <p class="text-xs text-gray-500">Auto-login enabled</p>
                        </div>
                    </div>
                    <div class="flex space-x-2">
                        <button class="text-yellow-600 hover:text-yellow-800 edit-auto-login" data-id="${network.id}">
                            <i data-feather="edit" class="w-4 h-4"></i>
                        </button>
                        <button class="text-red-600 hover:text-red-800 remove-auto-login" data-id="${network.id}">
                            <i data-feather="trash" class="w-4 h-4"></i>
                        </button>
                    </div>
                `;
                
                autoLoginContainer.appendChild(networkElement);
            });

            feather.replace();
            
            // Add event listeners for auto-login network actions
            document.querySelectorAll('.edit-auto-login').forEach(btn => {
                btn.addEventListener('click', function() {
                    const networkId = this.getAttribute('data-id');
                    configureNetwork(networkId, networks);
                });
            });
            
            document.querySelectorAll('.remove-auto-login').forEach(btn => {
                btn.addEventListener('click', function() {
                    const networkId = this.getAttribute('data-id');
                    removeAutoLogin(networkId, networks);
                });
            });
        }

        function updateNetworkStatistics(networks) {
            const total = networks.length;
            const approved = networks.filter(n => n.autoLogin).length;
            const secured = networks.filter(n => n.security !== 'none').length;
            const blocked = networks.filter(n => n.autoLogin === false).length;

            document.getElementById('totalNetworks').textContent = total;
            document.getElementById('approvedNetworks').textContent = approved;
            document.getElementById('securedNetworks').textContent = secured;
            document.getElementById('blockedNetworks').textContent = blocked;
        }

        function updateWifiStatus() {
            const connectedNetwork = sampleNetworks.find(network => network.connected);
            
            if (connectedNetwork) {
                document.getElementById('currentWifiStatus').textContent = `Connected to ${connectedNetwork.ssid}`;
                document.getElementById('currentWifiDetails').textContent = 
                    `Security: ${connectedNetwork.security.toUpperCase()} | Signal: ${connectedNetwork.strength}/4`;
                
                // Update WiFi strength indicator
                const strengthIndicator = document.getElementById('wifiStrengthIndicator');
                strengthIndicator.innerHTML = getStrengthBars(connectedNetwork.strength, true);
            } else {
                document.getElementById('currentWifiStatus').textContent = 'Not connected to WiFi';
                document.getElementById('currentWifiDetails').textContent = 'Connect to a network to enable auto-login features';
            }
        }

        function addAutoLoginNetwork() {
            openNetworkConfig(null);
        }

        function configureNetwork(networkId, networks) {
            const network = networks.find(n => n.id == networkId);
            openNetworkConfig(network);
        }

        function openNetworkConfig(network) {
            const modal = document.getElementById('networkConfigModal');
            const title = document.getElementById('networkConfigTitle');
            const form = document.getElementById('networkConfigForm');
            
            if (network) {
                title.textContent = `Configure ${network.ssid}`;
                document.getElementById('configNetworkId').value = network.id;
                document.getElementById('configSsid').value = network.ssid;
                document.getElementById('configSecurity').value = network.security;
                document.getElementById('configAutoLogin').value = network.autoLogin ? 'allow' : 'block';
                document.getElementById('configIsHidden').checked = network.hidden || false;
            } else {
                title.textContent = 'Add New Network';
                form.reset();
                document.getElementById('configNetworkId').value = '';
            }
            
            togglePasswordField();
            modal.classList.remove('hidden');
        }

        function closeNetworkConfig() {
            document.getElementById('networkConfigModal').classList.add('hidden');
        }

        function togglePasswordField() {
            const security = document.getElementById('configSecurity').value;
            const passwordField = document.getElementById('passwordField');
            
            if (security === 'none') {
                passwordField.classList.add('hidden');
            } else {
                passwordField.classList.remove('hidden');
            }
        }

        function saveNetworkConfig(e) {
            e.preventDefault();
            
            const networkId = document.getElementById('configNetworkId').value;
            const ssid = document.getElementById('configSsid').value;
            const security = document.getElementById('configSecurity').value;
            const autoLogin = document.getElementById('configAutoLogin').value;
            const isHidden = document.getElementById('configIsHidden').checked;
            
            // Get current networks from localStorage
            const wifiSettings = JSON.parse(localStorage.getItem('wifiSettings') || '{}');
            let networks = wifiSettings.networks || sampleNetworks;
            
            if (networkId) {
                // Update existing network
                const index = networks.findIndex(n => n.id == networkId);
                if (index !== -1) {
                    networks[index] = {
                        ...networks[index],
                        ssid,
                        security,
                        autoLogin: autoLogin === 'allow',
                        hidden: isHidden
                    };
                }
            } else {
                // Add new network
                const newNetwork = {
                    id: Date.now(),
                    ssid,
                    security,
                    strength: Math.floor(Math.random() * 4) + 1,
                    autoLogin: autoLogin === 'allow',
                    connected: false,
                    hidden: isHidden
                };
                networks.push(newNetwork);
            }
            
            // Save to localStorage
            wifiSettings.networks = networks;
            localStorage.setItem('wifiSettings', JSON.stringify(wifiSettings));
            
            // Update UI
            loadWifiNetworks();
            closeNetworkConfig();
            showMessage('Network configuration saved successfully!', 'success');
        }

        function removeAutoLogin(networkId, networks) {
            const wifiSettings = JSON.parse(localStorage.getItem('wifiSettings') || '{}');
            const updatedNetworks = networks.map(network => 
                network.id == networkId ? { ...network, autoLogin: false } : network
            );
            
            wifiSettings.networks = updatedNetworks;
            localStorage.setItem('wifiSettings', JSON.stringify(wifiSettings));
            
            loadWifiNetworks();
            showMessage('Auto-login disabled for network', 'success');
        }

        function testAllNetworks() {
            showMessage('Testing all configured networks...', 'success');
            setTimeout(() => {
                showMessage('Network test completed. All approved networks are accessible.', 'success');
            }, 3000);
        }

        function exportWifiConfig() {
            showMessage('WiFi configuration exported successfully!', 'success');
        }

        function resetWifiSettings() {
            if (confirm('Are you sure you want to reset all WiFi settings to defaults?')) {
                localStorage.removeItem('wifiSettings');
                loadWifiNetworks();
                showMessage('WiFi settings reset to defaults', 'success');
            }
        }

        // Supervisor Management
        function initializeSupervisorManagement() {
            document.getElementById('assignSupervisor').addEventListener('click', assignActingSupervisor);
            loadSupervisorData();
        }

        function loadSupervisorData() {
            // Load acting supervisors
            const actingSupervisorsList = document.getElementById('actingSupervisorsList');
            actingSupervisorsList.innerHTML = '';

            sampleActingSupervisors.forEach(supervisor => {
                const supervisorElement = document.createElement('div');
                supervisorElement.className = 'flex items-center justify-between p-3 border border-gray-200 rounded-lg';
                
                const statusClass = supervisor.status === 'active' ? 
                    'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-800';
                
                supervisorElement.innerHTML = `
                    <div class="flex items-center space-x-3">
                        <i data-feather="user" class="w-4 h-4 text-gray-400"></i>
                        <div>
                            <p class="font-medium text-gray-800">${supervisor.name}</p>
                            <p class="text-xs text-gray-500">
                                ${formatDate(supervisor.startDate)} - ${formatDate(supervisor.endDate)}
                            </p>
                        </div>
                    </div>
                    <div class="flex items-center space-x-2">
                        <span class="${statusClass} text-xs px-2 py-1 rounded-full capitalize">
                            ${supervisor.status}
                        </span>
                        <button class="text-red-600 hover:text-red-800 remove-supervisor" data-id="${supervisor.id}">
                            <i data-feather="x" class="w-4 h-4"></i>
                        </button>
                    </div>
                `;
                
                actingSupervisorsList.appendChild(supervisorElement);
            });

            feather.replace();

            // Load supervisor history
            const supervisorHistory = document.getElementById('supervisorHistory');
            supervisorHistory.innerHTML = `
                <div class="text-xs text-gray-500 space-y-2">
                    <div class="flex justify-between">
                        <span>Jane Smith assigned</span>
                        <span>Jan 18, 2024</span>
                    </div>
                    <div class="flex justify-between">
                        <span>David Brown assignment ended</span>
                        <span>Jan 15, 2024</span>
                    </div>
                    <div class="flex justify-between">
                        <span>Mike Wilson assigned</span>
                        <span>Jan 10, 2024</span>
                    </div>
                </div>
            `;
        }

        function assignActingSupervisor() {
            const supervisor = document.getElementById('actingSupervisor').value;
            const startDate = document.getElementById('supervisorStartDate').value;
            const endDate = document.getElementById('supervisorEndDate').value;
            const notifyStaff = document.getElementById('notifyStaff').checked;
            
            if (!supervisor) {
                showMessage('Please select a staff member', 'error');
                return;
            }

            if (!startDate || !endDate) {
                showMessage('Please select start and end dates', 'error');
                return;
            }

            if (new Date(startDate) >= new Date(endDate)) {
                showMessage('End date must be after start date', 'error');
                return;
            }

            // In a real app, you would save this to your backend
            showMessage('Acting supervisor assigned successfully!', 'success');
            
            // Reset form
            document.getElementById('actingSupervisor').value = '';
            document.getElementById('supervisorStartDate').value = '';
            document.getElementById('supervisorEndDate').value = '';
            
            // Reload data
            loadSupervisorData();
        }

        // Permissions Management
        function initializePermissionsManagement() {
            // Role selection
            document.querySelectorAll('.role-card').forEach(card => {
                card.addEventListener('click', function() {
                    document.querySelectorAll('.role-card').forEach(c => {
                        c.classList.remove('active', 'border-purple-500', 'bg-purple-50');
                    });
                    this.classList.add('active', 'border-purple-500', 'bg-purple-50');
                    
                    const role = this.getAttribute('data-role');
                    updateRolePermissions(role);
                });
            });

            // Quick actions
            document.getElementById('addNewUser').addEventListener('click', addNewUser);
            document.getElementById('bulkEditRoles').addEventListener('click', bulkEditRoles);
            document.getElementById('exportPermissions').addEventListener('click', exportPermissions);

            // Load user data
            loadUsersTable();
        }

        function loadUsersTable() {
            const usersTable = document.getElementById('usersTable');
            usersTable.innerHTML = '';

            sampleUsers.forEach(user => {
                const roleClass = getRoleClass(user.role);
                const statusClass = user.status === 'active' ? 
                    'bg-green-100 text-green-800' : 'bg-red-100 text-red-800';
                
                const row = `
                    <tr>
                        <td class="px-4 py-3 whitespace-nowrap">
                            <div class="flex items-center">
                                <div class="flex-shrink-0 h-8 w-8 bg-gray-100 rounded-full flex items-center justify-center">
                                    <i data-feather="user" class="text-gray-400 w-4 h-4"></i>
                                </div>
                                <div class="ml-4">
                                    <div class="text-sm font-medium text-gray-900">${user.name}</div>
                                    <div class="text-sm text-gray-500">${user.email}</div>
                                </div>
                            </div>
                        </td>
                        <td class="px-4 py-3 whitespace-nowrap">
                            <span class="${roleClass} text-xs px-2 py-1 rounded-full capitalize">
                                ${user.role}
                            </span>
                        </td>
                        <td class="px-4 py-3 whitespace-nowrap text-sm text-gray-500">${user.department}</td>
                        <td class="px-4 py-3 whitespace-nowrap">
                            <span class="${statusClass} text-xs px-2 py-1 rounded-full capitalize">
                                ${user.status}
                            </span>
                        </td>
                        <td class="px-4 py-3 whitespace-nowrap text-sm font-medium">
                            <button class="text-blue-600 hover:text-blue-900 mr-3 edit-user" data-id="${user.id}">
                                Edit
                            </button>
                            <button class="text-red-600 hover:text-red-900 delete-user" data-id="${user.id}">
                                Delete
                            </button>
                        </td>
                    </tr>
                `;
                usersTable.innerHTML += row;
            });

            feather.replace();
        }

        function updateRolePermissions(role) {
            // This would update the permission checkboxes based on the selected role
            const permissions = {
                employee: { attendance: false, scheduling: false, approvals: false, reports: false, settings: false },
                supervisor: { attendance: true, scheduling: true, approvals: true, reports: false, settings: false },
                admin: { attendance: true, scheduling: true, approvals: true, reports: true, settings: true }
            };

            const rolePermissions = permissions[role] || permissions.employee;
            
            document.getElementById('permAttendance').checked = rolePermissions.attendance;
            document.getElementById('permScheduling').checked = rolePermissions.scheduling;
            document.getElementById('permApprovals').checked = rolePermissions.approvals;
            document.getElementById('permReports').checked = rolePermissions.reports;
            document.getElementById('permSettings').checked = rolePermissions.settings;
        }

        function addNewUser() {
            showMessage('Add new user functionality would open here', 'success');
        }

        function bulkEditRoles() {
            showMessage('Bulk edit roles functionality would open here', 'success');
        }

        function exportPermissions() {
            showMessage('Permissions exported successfully!', 'success');
        }

        // System Settings
        function initializeSystemSettings() {
            // Quick actions
            document.getElementById('backupSystem').addEventListener('click', backupSystem);
            document.getElementById('clearCache').addEventListener('click', clearCache);
            document.getElementById('systemRestart').addEventListener('click', systemRestart);
        }

        function backupSystem() {
            showMessage('System backup initiated...', 'success');
            setTimeout(() => {
                showMessage('Backup completed successfully!', 'success');
            }, 3000);
        }

        function clearCache() {
            showMessage('Cache cleared successfully!', 'success');
        }

        function systemRestart() {
            if (confirm('Are you sure you want to restart the system? This may cause temporary disruption.')) {
                showMessage('System restart initiated...', 'success');
                setTimeout(() => {
                    showMessage('System restarted successfully!', 'success');
                }, 3000);
            }
        }

        // Utility Functions
        function getSecurityIcon(security) {
            const icons = {
                'none': '<i data-feather="unlock" class="w-4 h-4 text-red-500"></i>',
                'wpa2': '<i data-feather="lock" class="w-4 h-4 text-green-500"></i>',
                'wpa3': '<i data-feather="shield" class="w-4 h-4 text-blue-500"></i>',
                'wpa2-enterprise': '<i data-feather="key" class="w-4 h-4 text-purple-500"></i>'
            };
            return icons[security] || icons['none'];
        }

        function getStrengthBars(strength, asHtml = false) {
            if (asHtml) {
                let bars = '';
                for (let i = 1; i <= 4; i++) {
                    bars += `<div class="wifi-bar h-${i} ${i <= strength ? 'active' : ''}"></div>`;
                }
                return bars;
            } else {
                return Array.from({length: 4}, (_, i) => 
                    `<div class="wifi-bar h-${i+1} ${i < strength ? 'active' : ''}"></div>`
                ).join('');
            }
        }

        function getRoleClass(role) {
            const classes = {
                'employee': 'bg-blue-100 text-blue-800',
                'supervisor': 'bg-green-100 text-green-800',
                'admin': 'bg-purple-100 text-purple-800'
            };
            return classes[role] || classes.employee;
        }

        function formatDate(dateString) {
            const date = new Date(dateString);
            return date.toLocaleDateString() + ' ' + date.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'});
        }

        function showMessage(message, type) {
            const messageEl = document.createElement('div');
            messageEl.className = `fixed top-4 right-4 z-50 p-4 rounded-xl shadow-2xl transition-all duration-300 transform text-sm font-semibold 
                                ${type === 'success' ? 'bg-green-600' : 'bg-red-600'} text-white`;
            messageEl.textContent = message;
            document.body.appendChild(messageEl);
            
            setTimeout(() => {
                messageEl.classList.add('translate-y-[-100px]', 'opacity-0');
                setTimeout(() => {
                    if (messageEl.parentNode) {
                        messageEl.parentNode.removeChild(messageEl);
                    }
                }, 300);
            }, 3000);
        }
    </script>
</body>
</html>
